#!/bin/bash
# Copyright (c) 2010 Michael Sotnikov, stari4ek(at)gmail.com
# This file is part of 7kitchen - collection of scripts for 7hero
#
# Software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied.
source 7common

usage()
{
cat << EOF
Unpack resources and smali for all applications (apk/jar) from directory.

Usage:
	`basename $0` <dir> <out>

OPTIONS:
  -h,  --help              Show this message
  -v,  --verbose           Verbose
  -f,  --force             Overwrite if already exist
       --no-src            Do not decode sources (smali)
       --no-res            Do not decode resources
       --ignore-errors     Ignore errors occured while decoding
       --rom <path>        Set rom directory
EOF
exit 1
}

set -- `getopt -n$0 -u -o "hvf" -l "help verbose force no-src no-res ignore-errors rom:" -- $@` || usage

VERBOSE=0
VERBOSE_STR=''
FORCE=0
FORCE_STR=''
NO_SRC_STR=''
NO_RES_STR=''
ROM_STR=''
IGNORE_ERRORS_STR=''
while [ $# -gt 0 ]; do
	case "$1" in
		-h|--help)			usage;;
		-v|--verbose)		VERBOSE=1; VERBOSE_STR='-v';;
		-f|--force)			FORCE=1; FORCE_STR='-f';;
		--no-src)			NO_SRC_STR='--no-src';;
		--no-res)			NO_RES_STR='--no-res';;
		--rom)				ROM_STR="--rom $2"; shift;;
		--ignore-errors)	IGNORE_ERRORS_STR='--ignore-errors';;
		--)				shift; break;;
	esac
	shift
done

test $# -eq 2 || usage
IN=$1
OUT=$2

test -d $IN || 7die "Can't open src dir '$IN'" 1

mkdir -p $OUT || 7die "failed" 1

7verbose "Decoding dir `basename $IN`"
for APP in `find $IN -maxdepth 1 -name '*.jar' -o -name '*.apk'`
do
	BASEFILENAME=`get_basename $APP`
	# check if it exists already
	DECODED=$OUT/$BASEFILENAME

	7decodeapp $VERBOSE_STR $FORCE_STR $NO_SRC_STR $NO_RES_STR $ROM_STR $IGNORE_ERRORS_STR $APP $DECODED || exit 1
done

