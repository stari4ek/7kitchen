#!/bin/bash
# Copyright (c) 2010 Michael Sotnikov, stari4ek(at)gmail.com
# This file is part of 7kitchen - collection of scripts for 7hero
#
# Software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied.
source 7common

usage()
{
cat << EOF
Usage:
	`basename $0` [OPTIONS] SRC
This script performs package zip-aligning.
OPTIONS:
  -h,  --help              Show this message
  -o,  --out               Output. if missed do aligning in-place
  -a,  --align             Alignment in bytes. '4' (32bit) by default
  -f,  --force             Ignore config. Force to align
  -n,  --no-clean          Do not remove temporary files
  -c,  --configs=path      Specify path to `basename $0` include/exclude configs
  -v,  --verbose           Verbose
EOF
}

set -- `getopt -n$0 -u -o "o:afnc:hv" -l "out: align force no-clean configs: help verbose" -- $@` || usage

OUT=
ALIGN=4
FORCE=0
NOCLEAN=0
CONFIGS=
VERBOSE=
VERBOSE_STR=''
while [ $# -gt 0 ]; do
	case "$1" in
		-o|--out)		OUT=$2; shift;;
		-a|--align)		ALIGN=$2; shift;;
		-f|--force)		FORCE=1;;
		-n|--no-clean)	NOCLEAN=1;;
		-c|--configs)	CONFIGS=$2; shift;;
		-h|--help)		usage;;
		-v|--verbose)	VERBOSE=1; VERBOSE_STR='-v';;
		--)				shift; break;;
	esac
	shift
done

[ $# -ne 1 ] && usage
IN=$1
[ ! -r $IN ] && 7die "Can't open '$IN'" 1


if [ "$CONFIGS" == "" ]; then
	CONFIGS=`get_binpath`/7conf/`basename $0` 
fi

if [ $FORCE -ne 1 ] && ( [ ! -r $CONFIGS/include.conf ] || [ ! -r $CONFIGS/exclude.conf ] ); then
	7die "Can't find include.conf/exclude.conf in '$CONFIGS'. Use --force to ignore configs" 1
fi 

BASE=`basename $IN`
if [ $FORCE -eq 1 ] || ( [ `echo "$BASE" | grep -E -f $CONFIGS/include.conf` ] && [ ! `echo "$BASE" | grep -E -f $CONFIGS/exclude.conf` ] ); then
	7verbose "Aligning '$BASE'"

	ALIGNED=$OUT
	if [ -z $ALIGNED ]; then
		ALIGNED=$IN.aligned
	fi

	zipalign $VERBOSE_STR -f $ALIGN $IN $ALIGNED
	if [ ! $? ]; then
		7clean $ALIGNED
		7die "  failed" 1
		exit 1
	fi

	if [ -z $OUT ]; then
		if [ $NOCLEAN -eq 1 ]; then
			cp -f $ALIGNED $IN
		else
			mv -f $ALIGNED $IN
		fi
	fi
else
	7verbose "Leave '$BASE' unaligned"
	if [ ! -z $OUT ]; then
		cp -f $IN $OUT
	fi
fi

